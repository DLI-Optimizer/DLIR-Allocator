syntax = "proto3";
package RPCInterface;

// protoc --cpp_out=. --grpc_out=. --plugin=protoc-gen-grpc=/usr/local/bin/grpc_cpp_plugin ./rpcinterface.proto

message RequestInference {
    string modelname = 1;               // 将使用的推理服务，例如 "vgg19"
    string data = 2;                    // 待推理的数据, 例如 "{data: [[1.3, 4.5], [1, 2.0]]}"
}

message ReplyInference {
    int32 status =1;                    // 计算状态，1：成功；0：失败
    string result = 2;                  // 推理结果, 例如 "{output: [0.8]}"
    string info =3;                     // 存在warning或者error时，记录在此字段中，通常为空
}

message RequestInfo {}

message ReplyInfo {
    string ip = 1;                      // 调用IP
    int32 port=2;                       // 调用端口
    repeated string modelnames=3;       // 支持的模型，字符串数组，例如：{"vgg19","resnet50"}
}

service DLIRService {
    rpc DoInference (RequestInference) returns (ReplyInference);    // 请求推理
    rpc GetService (RequestInfo) returns (ReplyInfo);               // 查询部署的模型
}